{"version":3,"file":"background.js","mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://extension/./Public/background.ts"],"sourcesContent":["chrome.runtime.onMessage.addListener((message, sender, sendResponse) => {\n    if (message.type === \"SAVE_ANNOTATION\") {\n        const annotation = message.annotation;\n        const pageUrl = message.url;\n        // Retrieve existing annotations for the URL, if any\n        chrome.storage.sync.get([pageUrl], (result) => {\n            if (chrome.runtime.lastError) {\n                console.error(\"Error retrieving annotations:\", chrome.runtime.lastError);\n                return;\n            }\n            const annotations = result[pageUrl] || [];\n            // Add the new annotation to the array\n            annotations.push(annotation);\n            console.log(\"Annotations after saving:\", annotations);\n            // Save the updated array back to storage\n            chrome.storage.sync.set({ [pageUrl]: annotations }, () => {\n                if (chrome.runtime.lastError) {\n                    console.error(\"Error saving annotations:\", chrome.runtime.lastError);\n                    return;\n                }\n                console.log(`Annotations for ${pageUrl} saved:`, annotations);\n            });\n        });\n    }\n});\nchrome.tabs.onUpdated.addListener((tabId, changeInfo, tab) => {\n    if (tabId && changeInfo.status === \"complete\") {\n        const pageUrl = tab.url; // Get the URL of the updated tab\n        if (!pageUrl)\n            return; // Ensure the URL is valid\n        chrome.storage.sync.get([pageUrl], (result) => {\n            const annotations = result[pageUrl] || [];\n            console.log(annotations);\n            if (annotations.length !== 0) {\n                chrome.tabs.query({ active: true, currentWindow: true }, function (tabs) {\n                    var _a;\n                    if ((_a = tabs[0]) === null || _a === void 0 ? void 0 : _a.id) {\n                        console.log(\"responsesend\");\n                        chrome.tabs.sendMessage(tabs[0].id, { type: \"REAPPLY_ANNOTATIONS\", annotations });\n                    }\n                });\n            }\n        });\n    }\n});\n"],"names":[],"sourceRoot":""}